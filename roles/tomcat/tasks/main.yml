---
- name: Ensure required directories are present.
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    state: directory
    mode: "0700"
  loop:
    - { dest: "{{ tomcat_src_directory }}/download" }
    - { dest: "{{ tomcat_user_home }}/.config/systemd/user" }
    - { dest: "{{ tomcat_user_home }}/opt/tomcat/{{ tomcat_version }}" }

- name: Ensure binary archive is present.
  ansible.builtin.get_url:
    url: https://dlcdn.apache.org/tomcat/tomcat-{{ tomcat_version_major }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz
    dest: "{{ tomcat_src_directory }}/download/apache-tomcat-{{ tomcat_version }}.tar.gz"
    checksum: "{{ tomcat_checksum }}"
    mode: "0600"

- name: Ensure binary archive is extracted.
  ansible.builtin.unarchive:
    src: "{{ tomcat_src_directory }}/download/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ tomcat_user_home }}/opt/tomcat/{{ tomcat_version }}"
    creates: "{{ tomcat_user_home }}/opt/tomcat/{{ tomcat_version }}/RELEASE-NOTES"
    remote_src: true
    extra_opts:
      - --strip-components=1
      - --exclude=bin/*.bat
      - --exclude=conf/server.xml
      - --exclude=conf/tomcat-users.*
      - --exclude=webapps/*
    mode: u=rwX,g=,o=

- name: Ensure Tomcat server configuration is present.
  ansible.builtin.template:
    src: tomcat/server.xml.j2
    dest: "{{ tomcat_user_home }}/opt/tomcat/{{ tomcat_version }}/conf/server.xml"
    mode: "0600"
  notify: tomcat changed

- name: Ensure systemd user service file.
  ansible.builtin.template:
    src: tomcat/tomcat.service.j2
    dest: "{{ tomcat_user_home }}/.config/systemd/user/tomcat.service"
    mode: "0600"
  notify: tomcat changed

- name: Check if user is lingering.
  ansible.builtin.stat:
    path: /var/lib/systemd/linger/{{ tomcat_user }}
  register: tomcat_user_lingering

- name: Enable user lingering.
  ansible.builtin.command: loginctl enable-linger {{ tomcat_user }}
  when: not tomcat_user_lingering.stat.exists
  changed_when: true
  become: true
